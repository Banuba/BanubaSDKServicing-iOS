// Generated by Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
#ifndef BANUBASDKSERVICING_SWIFT_H
#define BANUBASDKSERVICING_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CoreGraphics;
@import CoreMedia;
@import CoreVideo;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BanubaSDKServicing",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSURL;
enum RenderBehaviorAdapter : NSInteger;
enum PIPShapeTypeAdapter : NSInteger;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing15SDKPIPServicing_")
@protocol SDKPIPServicing
@property (nonatomic, readonly) CGSize pipRenderSize;
- (void)seekPIPPlayerTo:(NSTimeInterval)time;
- (void)resetPIPShape;
- (void)createPIPPlayerWithVideoURL:(NSURL * _Nonnull)url completion:(void (^ _Nullable)(void))completion;
- (void)startPIPPlayer;
- (void)stopPIPPlayer;
- (void)setPIPPlayerWithRenderBehaviour:(enum RenderBehaviorAdapter)renderBehaviour;
- (void)setPIPPlayerWithShapeType:(enum PIPShapeTypeAdapter)type;
- (void)setPIPPlayerWithCenterPoint:(CGPoint)point;
@end

@class NSString;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing27SDKMaskPostprocessServicing_")
@protocol SDKMaskPostprocessServicing
- (void)postprocessProcessVideoFrame:(CVPixelBufferRef _Nonnull)from to:(CVPixelBufferRef _Nonnull)to time:(CMTime)time;
- (void)postprocessStopVideoProcessing;
- (void)postprocessPlaybackStop;
- (void)postprocessSurfaceDestroyed;
- (void)postprocessSurfaceCreatedWith:(CGSize)size;
- (void)postprocessSetEffectSize:(CGSize)size;
- (void)postprocessLoadEffectWithPath:(NSString * _Nonnull)path;
- (void)postprocessStartVideoProcessingWith:(CGSize)size;
- (void)postprocessDraw;
@end

@class NSNumber;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing23SDKBeautyEffectManaging_")
@protocol SDKBeautyEffectManaging
@property (nonatomic) BOOL isBeautificationEnabled;
- (BOOL)toggleBeautification SWIFT_WARN_UNUSED_RESULT;
@end

@class UIImage;
@class AVURLAsset;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing26SDKEffectsTextureServicing_")
@protocol SDKEffectsTextureServicing
- (void)effectAddImageTextureWithImage:(UIImage * _Nonnull)image;
- (void)effectAddVideoTextureWithAsset:(AVURLAsset * _Nonnull)asset;
- (void)unloadEffectTexture;
@end

@class EffectModel;
@protocol EffectSubtypeModificationsEventListener;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing19SDKEffectsServicing_")
@protocol SDKEffectsServicing <SDKEffectsTextureServicing>
- (void)loadMaskWithName:(NSString * _Nonnull)name;
- (void)effectDidBeginApplying;
- (void)effectDidEndApplying;
- (void)effectDidResetApplying;
- (void)effectDidChangeState;
- (void)unloadMask;
- (void)removeAllFilters;
- (void)applyFilter:(EffectModel * _Nonnull)filter;
- (void)removeFilter:(EffectModel * _Nonnull)filter;
- (void)setEffectSubtypeModificationsEventListener:(id <EffectSubtypeModificationsEventListener> _Nonnull)listener;
- (NSArray<NSString *> * _Nonnull)effectsPathsWithIncludeBeautyEffect:(BOOL)includeBeautyEffect SWIFT_WARN_UNUSED_RESULT;
@end

@class NSValue;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing18SDKOutputServicing_")
@protocol SDKOutputServicing
@property (nonatomic, readonly) BOOL isRecording;
@property (nonatomic, readonly) BOOL isEnoughDiskSpaceForRecording;
- (void)startVideoCapturingWithFileURL:(NSURL * _Nullable)fileURL progress:(void (^ _Nonnull)(CMTime))progress completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)startVideoCapturingWithFileURL:(NSURL * _Nullable)fileURL progress:(void (^ _Nonnull)(CMTime))progress periodicProgressTimeInterval:(NSTimeInterval)periodicProgressTimeInterval boundaryTimes:(NSArray<NSValue *> * _Nonnull)boundaryTimes boundaryHandler:(void (^ _Nonnull)(CMTime))boundaryHandler totalDuration:(NSTimeInterval)totalDuration completion:(void (^ _Nonnull)(BOOL, NSError * _Nullable))completion;
- (void)stopVideoCapturingWithCancel:(BOOL)cancel;
@end

enum CameraModuleSessionType : NSInteger;
@protocol SDKInputServicingDelegate;
@protocol SDKARInputServicingDelegate;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing17SDKInputServicing_")
@protocol SDKInputServicing
@property (nonatomic, readonly) BOOL isFrontCamera;
@property (nonatomic, readonly) float zoomFactor;
@property (nonatomic, readonly) enum CameraModuleSessionType currentCameraSessionType;
@property (nonatomic, strong) id <SDKInputServicingDelegate> _Nullable inputDelegate;
@property (nonatomic, strong) id <SDKARInputServicingDelegate> _Nullable inputARDelegate;
- (void)configureExposureSettings:(CGPoint)point useContinuousDetection:(BOOL)useContinuousDetection;
- (void)configureFocusSettings:(CGPoint)point useContinuousDetection:(BOOL)useContinuousDetection;
- (float)setZoomFactor:(float)zoomFactor SWIFT_WARN_UNUSED_RESULT;
- (void)toggleCameraWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)startCamera;
- (void)startAudioCapturing;
- (void)stopAudioCapturing;
- (void)setCameraSessionType:(enum CameraModuleSessionType)type;
- (enum AVCaptureTorchMode)setTorchWithMode:(enum AVCaptureTorchMode)mode;
- (enum AVCaptureTorchMode)toggleTorch SWIFT_WARN_UNUSED_RESULT;
@end

@class EAGLContext;
@class UIView;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing12CameraModule_")
@protocol CameraModule <SDKBeautyEffectManaging, SDKEffectsServicing, SDKInputServicing, SDKMaskPostprocessServicing, SDKOutputServicing, SDKPIPServicing>
@property (nonatomic, readonly) BOOL isLoaded;
@property (nonatomic) BOOL allowProcessing;
@property (nonatomic, readonly) CGSize playerViewSize;
@property (nonatomic) BOOL autoStart;
- (void)setupWithPostproccessContext:(EAGLContext * _Nonnull)postproccessContext;
- (void)destroy;
- (void)startWithCompletion:(void (^ _Nonnull)(void))completion;
- (void)stopWithCompletion:(void (^ _Nullable)(void))completion;
- (void)setRenderTargetWithView:(UIView * _Nonnull)view;
- (void)removeRenderTarget;
- (void)takeSnapshotWithHandler:(void (^ _Nonnull)(UIImage * _Nullable))handler;
- (UIView * _Nonnull)getRendererView SWIFT_WARN_UNUSED_RESULT;
@end

typedef SWIFT_ENUM(NSInteger, CameraModuleSessionType, open) {
  CameraModuleSessionTypeFrontVideo = 0,
  CameraModuleSessionTypeBackVideo = 1,
  CameraModuleSessionTypeFrontPhoto = 2,
  CameraModuleSessionTypeBackPhoto = 3,
};


SWIFT_CLASS("_TtC18BanubaSDKServicing11EffectModel")
@interface EffectModel : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP18BanubaSDKServicing39EffectSubtypeModificationsEventListener_")
@protocol EffectSubtypeModificationsEventListener
- (void)didChangeEffectSubtype:(NSString * _Nonnull)subtypeName;
- (void)didInitiateEffectSubtype:(NSString * _Nonnull)subtypeName;
@end

typedef SWIFT_ENUM(NSInteger, PIPShapeTypeAdapter, open) {
  PIPShapeTypeAdapterNone = 0,
  PIPShapeTypeAdapterOval = 1,
  PIPShapeTypeAdapterCircle = 2,
};

typedef SWIFT_ENUM(NSInteger, RenderBehaviorAdapter, open) {
  RenderBehaviorAdapterFullScreen = 0,
  RenderBehaviorAdapterVerticalSplitUp = 1,
  RenderBehaviorAdapterVerticalSplitDown = 2,
  RenderBehaviorAdapterHorizontalSplitLeft = 3,
  RenderBehaviorAdapterHorizontalSplitRight = 4,
  RenderBehaviorAdapterPip = 5,
};

@class ARFrame;
@class ARSession;
@class ARAnchor;

SWIFT_PROTOCOL("_TtP18BanubaSDKServicing27SDKARInputServicingDelegate_")
@protocol SDKARInputServicingDelegate
- (void)didUpdateWithArFrame:(ARFrame * _Nonnull)arFrame session:(ARSession * _Nonnull)session;
- (void)didAddWithAnchors:(NSArray<ARAnchor *> * _Nonnull)anchors session:(ARSession * _Nonnull)session;
- (void)didUpdateWithAnchors:(NSArray<ARAnchor *> * _Nonnull)anchors session:(ARSession * _Nonnull)session;
- (void)didRemoveWithDidRemove:(NSArray<ARAnchor *> * _Nonnull)anchors session:(ARSession * _Nonnull)session;
@end






SWIFT_PROTOCOL("_TtP18BanubaSDKServicing25SDKInputServicingDelegate_")
@protocol SDKInputServicingDelegate
- (void)willOutputWithPixelBuffer:(CVPixelBufferRef _Nonnull)pixelBuffer;
@end




#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
